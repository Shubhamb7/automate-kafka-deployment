---
- name: Kafka Connect Configuration
  hosts: connect
  remote_user: ubuntu
  vars:
    kafka_ips: "{{ groups['kafka'] | default([]) | map('extract', hostvars, ['inventory_hostname']) | map('regex_replace', '^(.*)$', '\\1:9092') | join(',') }}"
    bucket_region: ""
    bucket_name: ""
  tasks:
  - name: Create connect log directory
    become: true
    file:
      path: "/opt/connect"
      state: directory
      mode: '0755'
  - name: format the volume to xfs filesystem
    become: true
    shell: mkfs.xfs /dev/xvdf
  - name: mount the volume to data directory
    become: true
    shell: mount /dev/xvdf /opt/connect/
  - name: Add entry to fstab
    become: true
    shell: echo "/dev/xvdf       /opt/connect    xfs     defaults        0       0" >> /etc/fstab
  - name: check fstab
    become: true
    shell: mount -a
  - name: Create sys log directory
    become: true
    file:
      path: "/opt/connect/syslogs"
      state: directory
      mode: '0755'
  - name: Create log4j log directory
    become: true
    file:
      path: "/opt/connect/log4jlogs"
      state: directory
      mode: '0755'
  - name: Create plugin directory
    become: true
    file:
      path: "/opt/connect/plugin"
      state: directory
      mode: '0755'
  - name: Upload s3 sink connector zip to the server
    become: true
    copy:
      src: /opt/ansible-files/confluentinc-kafka-connect-s3-10.4.2.zip
      dest: /tmp/
      owner: root
      group: root
      mode: 0644
  - name: Extract the s3 sink connector zip
    become: true
    unarchive:
      src: /tmp/confluentinc-kafka-connect-s3-10.4.2.zip
      dest: /opt/connect/plugin/
      remote_src: yes
  - name: Upload debezium mysql connector tar to the server
    become: true
    copy:
      src: /opt/ansible-files/debezium-connector-mysql-2.2.1.Final-plugin.tar.gz
      dest: /tmp/
      owner: root
      group: root
      mode: 0644
  - name: Extract the debezium mysql connector tar
    become: true
    unarchive:
      src: /tmp/debezium-connector-mysql-2.2.1.Final-plugin.tar.gz
      dest: /opt/connect/plugin/
      remote_src: yes
  - name: Upload apicurio distro connect converter tar to the server
    become: true
    copy:
      src: /opt/ansible-files/apicurio-registry-distro-connect-converter-2.4.1.Final.tar.gz
      dest: /tmp/
      owner: root
      group: root
      mode: 0644
  - name: Create apicurio distro connect directory
    become: true
    file:
      path: "/opt/connect/plugin/apicurio-registry-distro-connect-converter-2.4.1/"
      state: directory
      mode: '0755'
  - name: Extract the distro connect converter tar
    become: true
    unarchive:
      src: /tmp/apicurio-registry-distro-connect-converter-2.4.1.Final.tar.gz
      dest: /opt/connect/plugin/apicurio-registry-distro-connect-converter-2.4.1/
      remote_src: yes
  - name: Remove existing connect properties file
    become: true
    file:
      path: /opt/kafka/config/connect-standalone.properties
      state: absent
  - name: Generate connect properties file from template
    become: true
    template:
      src: /opt/ansible-files/connect-standalone.properties.j2
      dest: /opt/kafka/config/connect-standalone.properties
  - name: Generate s3 sink connector properties file from template
    become: true
    template:
      src: /opt/ansible-files/connect-s3-sink.properties.j2
      dest: /opt/kafka/config/connect-s3-sink.properties
  - name: Upload local connect service file to the server
    become: true
    copy:
      src: /opt/ansible-files/connect.service
      dest: /etc/systemd/system/
      owner: root
      group: root
      mode: 0644
  - name: Download JMX exporter connect metrics yml file
    become: true
    get_url:
      url: https://raw.githubusercontent.com/prometheus/jmx_exporter/main/example_configs/kafka-connect.yml
      dest: /opt/monitoring/connect-jmx.yml
      mode: 0440
  - name: just force systemd to reread configs
    become: true
    systemd:
      daemon_reload: yes
  - name: Log Rotation
    become: true
    shell: (crontab -l ; echo '30 1 * * 0 find /opt/connect/log4jlogs/ -name "*.log*" ! -name "*.log" -type f -mtime +7 -exec rm {} \;') | crontab -
  - name: Logrotate of connect
    become: true
    copy:
      src: /opt/ansible-files/logrotate/connect
      dest: /etc/logrotate.d/
      owner: root
      group: root
      mode: 0644